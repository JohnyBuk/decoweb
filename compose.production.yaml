services:
  frontend:
    restart: always
    profiles: [production]
    build:
      context: frontend
      dockerfile: Dockerfile.production
    ports:
      - 80:80
      - 443:443
    depends_on:
      - api
    networks:
      - frontend
    volumes:
      - ./frontend/nginx.conf.production:/etc/nginx/nginx.conf/:ro
      - ./certbot/conf:/etc/nginx/ssl/:ro
      - ./certbot/www:/var/www/certbot/:ro

  backend:
    restart: always
    profiles: [production]
    build:
      context: backend
      dockerfile: Dockerfile.production
    volumes:
      - ./backend:/app
    networks:
      - backend

  api:
    image: nginx:latest
    restart: always
    profiles: [production]
    volumes:
      - ./backend/nginx.conf:/etc/nginx/nginx.conf/:ro
    depends_on:
      - backend
    networks:
      - frontend
      - backend

  initial-challenge:
    image: nginx:latest
    profiles: [challenge]
    volumes:
      - ./frontend/nginx.conf.challenge:/etc/nginx/nginx.conf/:ro
      - ./certbot/www/:/var/www/html/:ro
    ports:
      - 80:80
    networks:
      - frontend

  certbot:
    profiles: [challenge]
    image: certbot/certbot:latest
    command: certonly --webroot --webroot-path /var/www/html --force-renewal --email jenahruby@gmail.com -d decoweb.online --agree-tos
    networks:
      - frontend
    volumes:
      - ./certbot/www/:/var/www/html/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

networks:
  frontend:
  backend:
